specVersion: "1.0.0"

name: "subql-practice"
version: "0.0.1"
runner:
  node:
    name: "@subql/node-ethereum"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: "This project can be use as a starting point for developing your
  new Ethereum SubQuery project"
repository: "https://github.com/subquery/ethereum-subql-starter"

schema:
  file: "./schema.graphql"

network:
  # chainId is the EVM Chain ID, for Ethereum this is 1
  # https://chainlist.org/chain/1
  chainId: "1"
  # This endpoint must be a public non-pruned archive node
  # Public nodes may be rate limited, which can affect indexing speed
  # When developing your project we suggest getting a private API key
  # You can get them from OnFinality for free https://app.onfinality.io
  # https://documentation.onfinality.io/support/the-enhanced-api-service
  endpoint: "https://eth.api.onfinality.io/rpc?apikey=a3aa32d3-b075-447a-9ae6-e19d3bccb918"
  # Recommended to provide the HTTP endpoint of a full chain dictionary to speed up processing
  dictionary: "https://gx.api.subquery.network/sq/subquery/eth-dictionary"

dataSources:
  - kind: ethereum/Runtime
    startBlock: 6175243
    options:
      # Must be a key of assets
      abi: usdt
      address: "0xdAC17F958D2ee523a2206206994597C13D831ec7" # The contract address of the Gravatar on Ethereum
    assets:
      usdt:
        file: "./abis/USDT.json"
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handleUsdt
          kind: ethereum/LogHandler
          filter:
            topics:
              ## Follows standard log filters https://docs.ethers.io/v5/concepts/events/
              - Transfer ( address ,  address , uint256 )
  - kind: ethereum/Runtime
    startBlock: 6175243
    options:
      # Must be a key of assets
      abi: gravity
      address: "0x2E645469f354BB4F5c8a05B3b30A929361cf77eC" # The contract address of the Gravatar on Ethereum
    assets:
      gravity:
        file: "./abis/Gravity.json"
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handleNewGravatar
          kind: ethereum/LogHandler
          filter:
            topics:
              ## Follows standard log filters https://docs.ethers.io/v5/concepts/events/
              - NewGravatar(uint256,address,string,string)
        - handler: handleUpdatedGravatar
          kind: ethereum/LogHandler
          filter:
            topics:
              ## Follows standard log filters https://docs.ethers.io/v5/concepts/events/
              - UpdatedGravatar(uint256,address,string,string)